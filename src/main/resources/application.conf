akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = INFO
  logger-startup-timeout = 30s
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 0
  log-dead-letters-during-shutdown = false

  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?AKKA_HOST}
      port = 2552
      port = ${?AKKA_PORT}
    }
  }

  # default dispatcher
  default-dispatcher {
    fork-join-executor {
      parallelism-factor = 1.0
      parallelism-min = 2
      parallelism-max = 4
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://sd@127.0.0.1:2552",
      "akka.tcp://sd@127.0.0.1:2553"]

    roles = [ "discovery" ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #auto-down-unreachable-after = 20s

    distributed-data {
      gossip-interval = 2 s
      notify-subscribers-interval = 500 ms
      delta-crdt.enabled = on

      # pruning-interval = off
    }
  }

  actor.provider = "cluster"

  #extensions += "com.github.levkhomich.akka.tracing.TracingExtension"

  #tracing {
    #host = "95.213.194.86"
    #port = 9410
    #enabled = true
    #sample-rate = 1
    #max-spans-per-second = 10000
  #}

  stream {
    materializer {
      # Initial size of buffers used in stream elements
      initial-input-buffer-size = 4
      # Maximum size of buffers used in stream elements
      max-input-buffer-size = 16
      dispatcher = "akka.default-dispatcher"
    }
  }
}

fixed-dispatcher {
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 3
  }
  throughput = 50
}

resizable-dispatcher {
   type = Dispatcher
   executor = "thread-pool-executor"
   thread-pool-executor {
     core-pool-size-min = 5
     core-pool-size-factor = 2.0
     core-pool-size-max = 10
   }
   throughput = 100
}

pinned-dispatcher {
 type = PinnedDispatcher
 executor = "thread-pool-executor"
}


ts = 3 s

port = 9090
port = ${?PORT}

zipkin-url = "http://95.213.204.90:9411/api/v1/spans"